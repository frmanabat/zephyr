/*
 * Copyright (c) 2025 Analog Devices Inc.
 * SPDX-License-Identifier: Apache-2.0
 */

#ifndef ZEPHYR_INCLUDE_DRIVERS_SENSOR_MAX40109_H_
#define ZEPHYR_INCLUDE_DRIVERS_SENSOR_MAX40109_H_


enum max40109_sensor_attr {
    MAX40109_ANALOG_FILTER_BW_SETUP = SENSOR_ATTR_PRIV_START,
    MAX40109_SENSOR_OFFSET_CAL_CONFIG,
    MAX40109_ALERT_MODE,
    MAX40109_DIGITAL_FILTER_SETUP,  
    MAX40109_DRV_SCALE,

};

enum sensor_sampling_rate_max40109 {
    SENSOR_SAMPLING_RATE_MAX40109_1000HZ_1HZ = 0x00,
    SENSOR_SAMPLING_RATE_MAX40109_1000HZ_10HZ,
    SENSOR_SAMPLING_RATE_MAX40109_2000HZ_1HZ,
    SENSOR_SAMPLING_RATE_MAX40109_2000HZ_10HZ,
    SENSOR_SAMPLING_RATE_MAX40109_4000HZ_1HZ,
    SENSOR_SAMPLING_RATE_MAX40109_4000HZ_10HZ,
    SENSOR_SAMPLING_RATE_MAX40109_8000HZ_1HZ,
    SENSOR_SAMPLING_RATE_MAX40109_8000HZ_10HZ,
    SENSOR_SAMPLING_RATE_MAX40109_16000HZ_1HZ,
    SENSOR_SAMPLING_RATE_MAX40109_16000HZ_10HZ,
    };

enum sensor_max40109_pga_pressure_gain{
    SENSOR_MAX40109_PGA_PRESSURE_GAIN_5 = 0x0F,
    SENSOR_MAX40109_PGA_PRESSURE_GAIN_10 = 0x00,
    SENSOR_MAX40109_PGA_PRESSURE_GAIN_15,
    SENSOR_MAX40109_PGA_PRESSURE_GAIN_20,
    SENSOR_MAX40109_PGA_PRESSURE_GAIN_24,
    SENSOR_MAX40109_PGA_PRESSURE_GAIN_40,
    SENSOR_MAX40109_PGA_PRESSURE_GAIN_60,
    SENSOR_MAX40109_PGA_PRESSURE_GAIN_72,
    SENSOR_MAX40109_PGA_PRESSURE_GAIN_90,
    SENSOR_MAX40109_PGA_PRESSURE_GAIN_108,
    SENSOR_MAX40109_PGA_PRESSURE_GAIN_126,
    SENSOR_MAX40109_PGA_PRESSURE_GAIN_144,
    SENSOR_MAX40109_PGA_PRESSURE_GAIN_160,
    SENSOR_MAX40109_PGA_PRESSURE_GAIN_180,
    SENSOR_MAX40109_PGA_PRESSURE_GAIN_200,
    SENSOR_MAX40109_PGA_PRESSURE_GAIN_252,
    SENSOR_MAX40109_PGA_PRESSURE_GAIN_540= 0x10,
    SENSOR_MAX40109_PGA_PRESSURE_GAIN_1080,
    SENSOR_MAX40109_PGA_PRESSURE_GAIN_1440,
    SENSOR_MAX40109_PGA_PRESSURE_GAIN_2520,
};

enum sensor_max40109_pga_temperature_gain {
    SENSOR_MAX40109_PGA_TEMPERATURE_GAIN_1_5 = 0x00,
    SENSOR_MAX40109_PGA_TEMPERATURE_GAIN_2,
    SENSOR_MAX40109_PGA_TEMPERATURE_GAIN_3,
    SENSOR_MAX40109_PGA_TEMPERATURE_GAIN_5,
    SENSOR_MAX40109_PGA_TEMPERATURE_GAIN_6,
    SENSOR_MAX40109_PGA_TEMPERATURE_GAIN_10,
    SENSOR_MAX40109_PGA_TEMPERATURE_GAIN_15,
    SENSOR_MAX40109_PGA_TEMPERATURE_GAIN_20,
    SENSOR_MAX40109_PGA_TEMPERATURE_GAIN_24,
    SENSOR_MAX40109_PGA_TEMPERATURE_GAIN_30,
    SENSOR_MAX40109_PGA_TEMPERATURE_GAIN_36,
    SENSOR_MAX40109_PGA_TEMPERATURE_GAIN_40,
    SENSOR_MAX40109_PGA_TEMPERATURE_GAIN_45,
    SENSOR_MAX40109_PGA_TEMPERATURE_GAIN_60,
    SENSOR_MAX40109_PGA_TEMPERATURE_GAIN_72,
    SENSOR_MAX40109_PGA_TEMPERATURE_GAIN_90,
};

enum max40109_analog_filter_bw_settings{
    MAX40109_ANALOG_FILTER_BW_1200HZ = 0x00,
    MAX40109_ANALOG_FILTER_BW_900HZ,
    MAX40109_ANALOG_FILTER_BW_37000HZ,
    MAX40109_ANALOG_FILTER_BW_45000HZ,
};

enum max40109_digital_filter_setup{  
    MAX40109_DIGITAL_FILTER_SETUP_AVERAGE_NONE= 0,
    MAX40109_DIGITAL_FILTER_SETUP_AVERAGE_4,
    MAX40109_DIGITAL_FILTER_SETUP_AVERAGE_8,
    MAX40109_DIGITAL_FILTER_SETUP_AVERAGE_16,
    MAX40109_DIGITAL_FILTER_SETUP_AVERAGE_32,
    MAX40109_DIGITAL_FILTER_SETUP_AVERAGE_64,
    MAX40109_DIGITAL_FILTER_SETUP_AVERAGE_128,
};

enum max40109_alert_mode {
    MAX40109_ALERT_ISSUES_INTERRUPT = 0x00,
    MAX40109_ALERT_ISSUES_TEMPERATURE_DATA_IN_PWM_FASHION,
    MAX40109_ALERT_ISSUES_PRESSURE_DIGITAL_OUTPUT_CASE_1,
    MAX40109_ALERT_ISSUES_PRESSURE_DIGITAL_OUTPUT_CASE_2,
    MAX40109_ALERT_ISSUES_PRESSURE_DIGITAL_OUTPUT_CASE_3,
    MAX40109_ALERT_ISSUES_PRESSURE_DIGITAL_OUTPUT_CASE_4,
};

enum max40109_drv_scale {
    MAX40109_DRV_SCALE_1_0 = 0x00,
    MAX40109_DRV_SCALE_0_5,
    MAX40109_DRV_SCALE_0_375,
    MAX40109_DRV_SCALE_0_25,
};


int max40109_reg_read(const struct device *dev, uint8_t reg_addr, uint8_t *val, uint8_t length);
int max40109_reg_write(const struct device *dev, uint8_t reg_addr, uint8_t val);
int max40109_reg_write_multiple(const struct device *dev, uint8_t reg_addr, const uint8_t *val,	uint8_t length);
int max40109_reg_update(const struct device *dev, uint8_t reg_addr, uint8_t mask, uint8_t val);


#endif /* ZEPHYR_INCLUDE_DRIVERS_SENSOR_MAX40109_H_ */